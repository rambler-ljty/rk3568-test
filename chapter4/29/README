实现了一个基于定时器的字符设备驱动系统，主要包括：
1.内核模块（module/ioctl.c）：
  实现了一个支持定时器控制的字符设备驱动
  提供了定时器的开启、关闭和时间设置功能
  使用ioctl机制与用户空间通信
2.用户空间测试程序（app/ioctl.c）：
  演示了如何使用ioctl命令控制内核定时器
  展示了定时器的开启、关闭和时间设置操作
3.定时器库（app2/）：
  timerlib.h：定义了定时器操作相关的函数和命令
  timeropen.c：实现定时器开启功能
  timerclose.c：实现定时器关闭功能
  timerset.c：实现定时器时间设置功能
这个示例展示了Linux内核中定时器的使用，以及如何通过字符设备驱动和ioctl机制实现用户空间与内核空间的通信。

app2 目录文件是将各功能拆分实现
