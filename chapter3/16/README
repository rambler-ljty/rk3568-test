这个目录下的代码是一个使用自旋锁实现设备互斥访问的 Linux 字符设备驱动程序示例。

主要特点如下：
1.app.c（用户空间应用程序）：
  用于测试设备驱动
  可以向设备写入 "topeet" 或 "itop" 字符串
  使用方法：./app 设备文件路径 字符串(topeet/itop)
2.spinlock.c（内核模块）：
  使用自旋锁 spinlock_t 和标志位 flag 实现设备互斥访问
  主要功能：
    设备打开时检查是否可用（flag为1表示可用）
    使用自旋锁保护临界区
    设备关闭时释放资源（设置flag为1）
    读取操作返回固定字符串 "topeet"
    写入 "topeet" 时延时4秒
     写入 "itop" 时延时2秒

这个示例展示了：
 使用自旋锁实现设备互斥访问
 自旋锁的基本使用方法（加锁和解锁）
